//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from pike.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IpikeListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class pikeBaseListener : IpikeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] pikeParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] pikeParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinition([NotNull] pikeParser.DefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinition([NotNull] pikeParser.DefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_definition([NotNull] pikeParser.Function_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_definition([NotNull] pikeParser.Function_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariables([NotNull] pikeParser.VariablesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariables([NotNull] pikeParser.VariablesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.variable_names"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_names([NotNull] pikeParser.Variable_namesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.variable_names"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_names([NotNull] pikeParser.Variable_namesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.variable_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_name([NotNull] pikeParser.Variable_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.variable_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_name([NotNull] pikeParser.Variable_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] pikeParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] pikeParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] pikeParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] pikeParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCond([NotNull] pikeParser.CondContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCond([NotNull] pikeParser.CondContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.while_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_stmt([NotNull] pikeParser.While_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.while_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_stmt([NotNull] pikeParser.While_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.do_while_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDo_while_stmt([NotNull] pikeParser.Do_while_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.do_while_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDo_while_stmt([NotNull] pikeParser.Do_while_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.for_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_stmt([NotNull] pikeParser.For_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.for_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_stmt([NotNull] pikeParser.For_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.switch_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_stmt([NotNull] pikeParser.Switch_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.switch_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_stmt([NotNull] pikeParser.Switch_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.case_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_stmt([NotNull] pikeParser.Case_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.case_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_stmt([NotNull] pikeParser.Case_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.default_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefault_stmt([NotNull] pikeParser.Default_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.default_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefault_stmt([NotNull] pikeParser.Default_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.foreach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeach_stmt([NotNull] pikeParser.Foreach_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.foreach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeach_stmt([NotNull] pikeParser.Foreach_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.break_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreak_stmt([NotNull] pikeParser.Break_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.break_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreak_stmt([NotNull] pikeParser.Break_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.continue_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinue_stmt([NotNull] pikeParser.Continue_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.continue_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinue_stmt([NotNull] pikeParser.Continue_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] pikeParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] pikeParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression2([NotNull] pikeParser.Expression2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression2([NotNull] pikeParser.Expression2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression5"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression5([NotNull] pikeParser.Expression5Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression5"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression5([NotNull] pikeParser.Expression5Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression6"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression6([NotNull] pikeParser.Expression6Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression6"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression6([NotNull] pikeParser.Expression6Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.extension"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtension([NotNull] pikeParser.ExtensionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.extension"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtension([NotNull] pikeParser.ExtensionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis([NotNull] pikeParser.ParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis([NotNull] pikeParser.ParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_list([NotNull] pikeParser.Expression_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_list([NotNull] pikeParser.Expression_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.splice_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSplice_expression([NotNull] pikeParser.Splice_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.splice_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSplice_expression([NotNull] pikeParser.Splice_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] pikeParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] pikeParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] pikeParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] pikeParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_([NotNull] pikeParser.Type_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_([NotNull] pikeParser.Type_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.function_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_type([NotNull] pikeParser.Function_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.function_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_type([NotNull] pikeParser.Function_typeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
