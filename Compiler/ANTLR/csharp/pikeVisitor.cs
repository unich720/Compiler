//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from pike.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="pikeParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IpikeVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] pikeParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition([NotNull] pikeParser.DefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_definition([NotNull] pikeParser.Function_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariables([NotNull] pikeParser.VariablesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.variable_names"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_names([NotNull] pikeParser.Variable_namesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_name([NotNull] pikeParser.Variable_nameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] pikeParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] pikeParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCond([NotNull] pikeParser.CondContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.while_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_stmt([NotNull] pikeParser.While_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.do_while_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDo_while_stmt([NotNull] pikeParser.Do_while_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.for_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_stmt([NotNull] pikeParser.For_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.switch_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_stmt([NotNull] pikeParser.Switch_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCase_stmt([NotNull] pikeParser.Case_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.default_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefault_stmt([NotNull] pikeParser.Default_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.foreach_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeach_stmt([NotNull] pikeParser.Foreach_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.break_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreak_stmt([NotNull] pikeParser.Break_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinue_stmt([NotNull] pikeParser.Continue_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] pikeParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.expression2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression2([NotNull] pikeParser.Expression2Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.expression5"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression5([NotNull] pikeParser.Expression5Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.expression6"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression6([NotNull] pikeParser.Expression6Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtension([NotNull] pikeParser.ExtensionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.parenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesis([NotNull] pikeParser.ParenthesisContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_list([NotNull] pikeParser.Expression_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.splice_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSplice_expression([NotNull] pikeParser.Splice_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] pikeParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] pikeParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_([NotNull] pikeParser.Type_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="pikeParser.function_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_type([NotNull] pikeParser.Function_typeContext context);
}
