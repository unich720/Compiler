//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from pike.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="pikeParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IpikeListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] pikeParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] pikeParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinition([NotNull] pikeParser.DefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinition([NotNull] pikeParser.DefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition([NotNull] pikeParser.Function_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition([NotNull] pikeParser.Function_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariables([NotNull] pikeParser.VariablesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariables([NotNull] pikeParser.VariablesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.variable_names"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_names([NotNull] pikeParser.Variable_namesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.variable_names"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_names([NotNull] pikeParser.Variable_namesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_name([NotNull] pikeParser.Variable_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_name([NotNull] pikeParser.Variable_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] pikeParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] pikeParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] pikeParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] pikeParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCond([NotNull] pikeParser.CondContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCond([NotNull] pikeParser.CondContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.while_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_stmt([NotNull] pikeParser.While_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.while_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_stmt([NotNull] pikeParser.While_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.do_while_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_while_stmt([NotNull] pikeParser.Do_while_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.do_while_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_while_stmt([NotNull] pikeParser.Do_while_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.for_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_stmt([NotNull] pikeParser.For_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.for_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_stmt([NotNull] pikeParser.For_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.switch_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitch_stmt([NotNull] pikeParser.Switch_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.switch_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitch_stmt([NotNull] pikeParser.Switch_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_stmt([NotNull] pikeParser.Case_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_stmt([NotNull] pikeParser.Case_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.default_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefault_stmt([NotNull] pikeParser.Default_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.default_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefault_stmt([NotNull] pikeParser.Default_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.foreach_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeach_stmt([NotNull] pikeParser.Foreach_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.foreach_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeach_stmt([NotNull] pikeParser.Foreach_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.break_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_stmt([NotNull] pikeParser.Break_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.break_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_stmt([NotNull] pikeParser.Break_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinue_stmt([NotNull] pikeParser.Continue_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinue_stmt([NotNull] pikeParser.Continue_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] pikeParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] pikeParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression2([NotNull] pikeParser.Expression2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression2([NotNull] pikeParser.Expression2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression5"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression5([NotNull] pikeParser.Expression5Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression5"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression5([NotNull] pikeParser.Expression5Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression6"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression6([NotNull] pikeParser.Expression6Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression6"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression6([NotNull] pikeParser.Expression6Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtension([NotNull] pikeParser.ExtensionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtension([NotNull] pikeParser.ExtensionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.parenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesis([NotNull] pikeParser.ParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.parenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesis([NotNull] pikeParser.ParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_list([NotNull] pikeParser.Expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_list([NotNull] pikeParser.Expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.splice_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSplice_expression([NotNull] pikeParser.Splice_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.splice_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSplice_expression([NotNull] pikeParser.Splice_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] pikeParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] pikeParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] pikeParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] pikeParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_([NotNull] pikeParser.Type_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_([NotNull] pikeParser.Type_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pikeParser.function_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_type([NotNull] pikeParser.Function_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pikeParser.function_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_type([NotNull] pikeParser.Function_typeContext context);
}
