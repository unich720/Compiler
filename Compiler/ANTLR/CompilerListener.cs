//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Compiler.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CompilerParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface ICompilerListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] CompilerParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] CompilerParser.InputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.input_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput_section([NotNull] CompilerParser.Input_sectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.input_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput_section([NotNull] CompilerParser.Input_sectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.input_section_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput_section_part([NotNull] CompilerParser.Input_section_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.input_section_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput_section_part([NotNull] CompilerParser.Input_section_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.input_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput_element([NotNull] CompilerParser.Input_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.input_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput_element([NotNull] CompilerParser.Input_elementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.token"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToken([NotNull] CompilerParser.TokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.token"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToken([NotNull] CompilerParser.TokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] CompilerParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] CompilerParser.KeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] CompilerParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] CompilerParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_literal([NotNull] CompilerParser.Boolean_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_literal([NotNull] CompilerParser.Boolean_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CompilerParser.operator_or_punctuator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_or_punctuator([NotNull] CompilerParser.Operator_or_punctuatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CompilerParser.operator_or_punctuator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_or_punctuator([NotNull] CompilerParser.Operator_or_punctuatorContext context);
}
